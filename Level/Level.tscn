[gd_scene load_steps=7 format=2]

[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://UI/UI.tscn" type="PackedScene" id=4]

[sub_resource type="SpatialMaterial" id=1]
albedo_color = Color( 0.345098, 0.568627, 0.25098, 1 )

[sub_resource type="CubeMesh" id=2]
material = SubResource( 1 )
size = Vector3( 150, 2, 150 )

[sub_resource type="BoxShape" id=3]
extents = Vector3( 50, 1, 50 )

[sub_resource type="BoxShape" id=4]
extents = Vector3( 50, 15, 1 )

[node name="Level" type="Node"]

[node name="Sun" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 100, 0 )

[node name="Ground" type="StaticBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0 )
collision_layer = 2
collision_mask = 0
__meta__ = {
"_edit_group_": true
}

[node name="MeshInstance" type="MeshInstance" parent="Ground"]
mesh = SubResource( 2 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="Ground"]
shape = SubResource( 3 )

[node name="Barriers" type="StaticBody" parent="Ground"]
collision_layer = 0

[node name="Left" type="CollisionShape" parent="Ground/Barriers"]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -50, 15, 0 )
shape = SubResource( 4 )

[node name="Top" type="CollisionShape" parent="Ground/Barriers"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 15, -50 )
shape = SubResource( 4 )

[node name="Right" type="CollisionShape" parent="Ground/Barriers"]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 50, 15, 0 )
shape = SubResource( 4 )

[node name="Bottom" type="CollisionShape" parent="Ground/Barriers"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 15, 50 )
shape = SubResource( 4 )

[node name="Player" parent="." instance=ExtResource( 1 )]

[node name="UI" parent="." instance=ExtResource( 4 )]

[connection signal="energy_changed" from="Player" to="UI" method="_on_Player_energy_changed"]
[connection signal="health_changed" from="Player" to="UI" method="_on_Player_health_changed"]
[connection signal="score_changed" from="Player" to="UI" method="_on_Player_score_changed"]
